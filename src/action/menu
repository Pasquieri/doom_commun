deplacements.c:	if (env->key[1])
deplacements.c:	if (env->key[13])
deplacements.c:	if (env->key[0])
deplacements.c:	if (env->key[2])
deplacements_extra.c:	x = env->perso_x + xa;
deplacements_extra.c:	y = env->perso_y + ya;
deplacements_extra.c:	if (check(env->tab[(int)y / env->coef][(int)x / env->coef])
deplacements_extra.c:			&& check(env->tab[((int)y + 1) / env->coef][(int)x / env->coef])
deplacements_extra.c:			&& check(env->tab[((int)y - 1) / env->coef][(int)x / env->coef])
deplacements_extra.c:			&& check(env->tab[(int)y / env->coef][((int)x + 1) / env->coef])
deplacements_extra.c:			&& check(env->tab[(int)y / env->coef][((int)x - 1) / env->coef]))
deplacements_extra.c:		angle = env->d_regard - 180;
deplacements_extra.c:		angle = env->d_regard;
deplacements_extra.c:	xa = fabs(cos(angle * M_PI / 180) * env->vitesse) * coef_x;
deplacements_extra.c:	ya = fabs(sin(angle * M_PI / 180) * env->vitesse) * coef_y;
deplacements_extra.c:		env->perso_x = env->perso_x + xa;
deplacements_extra.c:		env->perso_y = env->perso_y + ya;
deplacements_extra.c:		angle = env->d_regard + 90;
deplacements_extra.c:		angle = env->d_regard - 90;
deplacements_extra.c:	xa = fabs(cos(angle * M_PI / 180) * env->vitesse) * coef_x;
deplacements_extra.c:	ya = fabs(sin(angle * M_PI / 180) * env->vitesse) * coef_y;
deplacements_extra.c:		env->perso_x = env->perso_x + xa;
deplacements_extra.c:		env->perso_y = env->perso_y + ya;
key_apply.c:	env->key[key] = 1;
key_apply.c:	if (env->key[40] && !env->menu) // pour afficher le gun : key k
key_apply.c:		if (env->inv.gun == 0)
key_apply.c:			env->inv.gun = 1;
key_apply.c:			env->inv.gun = 0;
key_apply.c:	if (env->key[37] && env->inv.gun == 1 && !env->menu) // coup de feu : key l
key_apply.c:		mlx_put_image_to_window(env->mlx,env->win,env->m[0].img, 0,0);
key_apply.c:		mlx_put_image_to_window(env->mlx,env->win,env->m[1].img, 960,20);
key_apply.c:	if (env->key[12])
key_apply.c:		printf("nb grid : %d, win : %d, column : %d, banana : %d, monkey : %d, door : %d\n", env->sp[0].nb, env->sp[1].nb, env->sp[2].nb, env->sp[3].nb, env->sp[4].nb, env->sp[5].nb);
key_apply.c:			while (++k < env->sp[i].nb)
key_apply.c:				if (env->sp[i].sprite[k].detec_hor == 1)
key_apply.c:				if (env->sp[i].sprite[k].detec_ver == 1)
key_apply.c:		printf("\ngrid = nb : %d, val : %d\n",env->sp[0].nb, env->sp[0].val);
key_apply.c:		while (++i < env->sp[0].nb)
key_apply.c:			printf("sprite %d : i = %d, j = %d\n",i, env->sp[0].sprite[i].i,env->sp[0].sprite[i].j);
key_apply.c:		printf("\nwin = nb : %d, val : %d\n",env->sp[1].nb, env->sp[1].val);
key_apply.c:		while (++i < env->sp[1].nb)
key_apply.c:			printf("sprite %d : i = %d, j = %d\n",i, env->sp[1].sprite[i].i,env->sp[1].sprite[i].j);
key_apply.c:		printf("\ncolumn = nb : %d, val : %d\n",env->sp[2].nb, env->sp[2].val);
key_apply.c:		while (++i < env->sp[2].nb)
key_apply.c:			printf("sprite %d : i = %d, j = %d\n",i, env->sp[2].sprite[i].i,env->sp[2].sprite[i].j);
key_apply.c:		printf("\nbanana = nb : %d, val : %d\n",env->sp[3].nb, env->sp[3].val);
key_apply.c:		while (++i < env->sp[3].nb)
key_apply.c:			printf("sprite %d : i = %d, j = %d\n",i, env->sp[3].sprite[i].i,env->sp[3].sprite[i].j);
key_apply.c:		printf("\nmonkey = nb : %d, val : %d\n",env->sp[4].nb, env->sp[4].val);
key_apply.c:		while (++i < env->sp[4].nb)
key_apply.c:			printf("sprite %d : i = %d, j = %d\n",i, env->sp[4].sprite[i].i,env->sp[4].sprite[i].j);
key_apply.c:		printf("\ndoor = nb : %d, val : %d\n",env->sp[5].nb, env->sp[5].val);
key_apply.c:		while (++i < env->sp[5].nb)
key_apply.c:			printf("sprite %d : i = %d, j = %d\n",i, env->sp[5].sprite[i].i,env->sp[5].sprite[i].j);*/
key_apply.c:	if ((env->key[14] && env->door.on) || (env->door.off && env->key[14]))
key_apply.c:		exec_calcul(env, env->d_regard, 0);
key_apply.c:		printf("door_on : %d, door_off : %d\n",env->door.on, env->door.off);
key_apply.c:	env->key[key] = 0;
key_apply.c:	if (key == 257 && !env->menu)
key_apply.c:		env->vitesse = 0.5;
key_apply.c:	env->key[125] = 0;
key_apply.c:	env->key[126] = 0;
key_apply.c:	if (env->key[53])
key_apply.c:	if (env->key[49])
key_apply.c:		if (env->key[49] && !env->menu)
key_apply.c:			env->menu = 1;
key_apply.c:			env->key[49] = 0;
key_apply.c:		else if (env->key[49] && env->menu && env->map_entree == -1)
key_apply.c:		else if (env->key[49] && env->menu && env->map_entree != -1)
key_apply.c:		env->key[49] = 0; // pour ne pas boucler (affiche deaffiche le menu)
key_apply.c:	if ((env->key[125] || env->key[126]) && env->menu == 1)
key_apply.c:	if (!env->menu)
motion_notify.c:	mlx_mouse_move(env->win, 1200 / 2, 870 / 2);
motion_notify.c:	if (env->menu == 1)
motion_notify.c:		env->d_regard -= (40 * tmp_x / 600);
motion_notify.c:		env->d_regard += (40 * tmp_x / 600);
motion_notify.c:	if (y < 435 && (env->h_regard < (W_HEIGHT / 2 + 200))) //+200
motion_notify.c:		env->h_regard += (100 * tmp_y / 435);
motion_notify.c:	else if (y > 435 && (env->h_regard > (W_HEIGHT / 2 - 200))) //-200
motion_notify.c:		env->h_regard -= (100 * tmp_y / 435);
motion_notify.c:	env->d_regard = env->d_regard % 360;
motion_notify.c:	if (env->d_regard < 0)
motion_notify.c:		env->d_regard = env->d_regard + 360;
rotation_regard.c:	if (env->key[78])
rotation_regard.c:		env->d_regard += 1;
rotation_regard.c:	else if (env->key[69])
rotation_regard.c:		env->d_regard -= 1;
rotation_regard.c:	if (env->key[123])
rotation_regard.c:		env->d_regard += 5;
rotation_regard.c:	else if (env->key[124])
rotation_regard.c:		env->d_regard -= 5;
rotation_regard.c:	else if (env->key[125] && env->h_regard > (870 / 2 - 200))
rotation_regard.c:		env->h_regard -= 10;
rotation_regard.c:	else if (env->key[126] && env->h_regard < (870 / 2 + 200))
rotation_regard.c:		env->h_regard += 10;
rotation_regard.c:	env->d_regard = env->d_regard % 360;
rotation_regard.c:	if (env->d_regard < 0)
rotation_regard.c:		env->d_regard = env->d_regard + 360;
trig_press.c:	if ((env->key[0] || env->key[1] || env->key[2] || env->key[13])
trig_press.c:			&& !env->menu)
trig_press.c:	if ((env->key[69] || env->key[78] || env->key[123] || env->key[124]
trig_press.c:				|| env->key[125] || env->key[126]) && !env->menu)
trig_press.c:	if (env->key[27] || env->key[24])
trig_press.c:		if (env->key[27])
trig_press.c:			env->lum_int -= 3;
trig_press.c:		if (env->key[24])
trig_press.c:			env->lum_int += 3;
trig_press.c:		env->lum_int < 1 ? env->lum_int = 1 : env->lum_int;
trig_press.c:		env->lum_int > 500 ? env->lum_int = 500 : env->lum_int;
trig_press.c:	if (env->key[257] && !env->menu)
trig_press.c:		env->vitesse = 2;
trig_press.c:	if (!env->menu)
trig_press.c:/*	if (env->key[258]) // shift droit : test affichage sprite
trig_press.c:		while (++y < env->sp_t[sp].height)
trig_press.c:			while (++x < env->sp_t[sp].width)
trig_press.c:				m = 4 * x + y * env->m[0].s_l;
trig_press.c:				n = 4 * x + y * env->sp_t[sp].s_l;
trig_press.c:				if (env->sp_t[sp].img_str[n + 3] != -1)
trig_press.c:					env->m[0].img_str[m] = env->sp_t[sp].img_str[n];
trig_press.c:					env->m[0].img_str[m + 1] = env->sp_t[sp].img_str[n + 1];
trig_press.c:					env->m[0].img_str[m + 2] = env->sp_t[sp].img_str[n + 2];
trig_press.c:					env->m[0].img_str[m + 3] = env->sp_t[sp].img_str[n + 3];
trig_press.c:		mlx_put_image_to_window(env->mlx, env->win, env->m[0].img ,0,0);
